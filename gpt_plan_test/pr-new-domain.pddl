
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Domain file automatically generated by the Tarski FSTRIPS writer
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define (domain test_domain)
    (:requirements :action-costs :equality)
    (:types
        
    )

    (:constants
        
    )

    (:predicates
        (holding_b )
        (clear_c )
        (holding_c )
        (clear_a )
        (holding_a )
        (ontable_b )
        (ontable_c )
        (on_a_a )
        (on_a_b )
        (on_a_c )
        (on_b_a )
        (on_b_b )
        (on_c_b )
        (on_c_c )
        (handempty )
        (clear_b )
        (ontable_a )
        (on_c_a )
        (on_b_c )
    )

    (:functions
        (total-cost ) - number
    )

    

    
    (:action PICK-UP_C
     :parameters ()
     :precondition (and (handempty ) (ontable_c ) (clear_c ))
     :effect (and
        (holding_c )
        (not (clear_c ))
        (not (ontable_c ))
        (not (handempty ))
        (increase (total-cost ) 1))
    )


    (:action PICK-UP_B
     :parameters ()
     :precondition (and (handempty ) (ontable_b ) (clear_b ))
     :effect (and
        (holding_b )
        (not (clear_b ))
        (not (ontable_b ))
        (not (handempty ))
        (increase (total-cost ) 1))
    )


    (:action UNSTACK_C_C
     :parameters ()
     :precondition (and (handempty ) (clear_c ) (on_c_c ))
     :effect (and
        (holding_c )
        (not (on_c_c ))
        (not (handempty ))
        (increase (total-cost ) 1))
    )


    (:action UNSTACK_C_B
     :parameters ()
     :precondition (and (handempty ) (clear_c ) (on_c_b ))
     :effect (and
        (holding_c )
        (clear_b )
        (not (on_c_b ))
        (not (clear_c ))
        (not (handempty ))
        (increase (total-cost ) 1))
    )


    (:action UNSTACK_B_B
     :parameters ()
     :precondition (and (handempty ) (clear_b ) (on_b_b ))
     :effect (and
        (holding_b )
        (not (on_b_b ))
        (not (handempty ))
        (increase (total-cost ) 1))
    )


    (:action UNSTACK_B_A
     :parameters ()
     :precondition (and (handempty ) (clear_b ) (on_b_a ))
     :effect (and
        (holding_b )
        (clear_a )
        (not (on_b_a ))
        (not (clear_b ))
        (not (handempty ))
        (increase (total-cost ) 1))
    )


    (:action UNSTACK_A_C
     :parameters ()
     :precondition (and (handempty ) (clear_a ) (on_a_c ))
     :effect (and
        (holding_a )
        (clear_c )
        (not (on_a_c ))
        (not (clear_a ))
        (not (handempty ))
        (increase (total-cost ) 1))
    )


    (:action UNSTACK_A_B
     :parameters ()
     :precondition (and (handempty ) (clear_a ) (on_a_b ))
     :effect (and
        (holding_a )
        (clear_b )
        (not (on_a_b ))
        (not (clear_a ))
        (not (handempty ))
        (increase (total-cost ) 1))
    )


    (:action UNSTACK_A_A
     :parameters ()
     :precondition (and (handempty ) (clear_a ) (on_a_a ))
     :effect (and
        (holding_a )
        (not (on_a_a ))
        (not (handempty ))
        (increase (total-cost ) 1))
    )


    (:action STACK_C_C
     :parameters ()
     :precondition (and (holding_c ) (clear_c ))
     :effect (and
        (handempty )
        (on_c_c )
        (not (holding_c ))
        (increase (total-cost ) 1))
    )


    (:action STACK_C_B
     :parameters ()
     :precondition (and (holding_c ) (clear_b ))
     :effect (and
        (handempty )
        (clear_c )
        (on_c_b )
        (not (clear_b ))
        (not (holding_c ))
        (increase (total-cost ) 1))
    )


    (:action STACK_C_A
     :parameters ()
     :precondition (and (holding_c ) (clear_a ))
     :effect (and
        (handempty )
        (clear_c )
        (on_c_a )
        (not (clear_a ))
        (not (holding_c ))
        (increase (total-cost ) 1))
    )


    (:action STACK_B_C
     :parameters ()
     :precondition (and (holding_b ) (clear_c ))
     :effect (and
        (handempty )
        (clear_b )
        (on_b_c )
        (not (clear_c ))
        (not (holding_b ))
        (increase (total-cost ) 1))
    )


    (:action STACK_B_B
     :parameters ()
     :precondition (and (holding_b ) (clear_b ))
     :effect (and
        (handempty )
        (on_b_b )
        (not (holding_b ))
        (increase (total-cost ) 1))
    )


    (:action STACK_B_A
     :parameters ()
     :precondition (and (holding_b ) (clear_a ))
     :effect (and
        (handempty )
        (clear_b )
        (on_b_a )
        (not (clear_a ))
        (not (holding_b ))
        (increase (total-cost ) 1))
    )


    (:action STACK_A_C
     :parameters ()
     :precondition (and (holding_a ) (clear_c ))
     :effect (and
        (handempty )
        (clear_a )
        (on_a_c )
        (not (clear_c ))
        (not (holding_a ))
        (increase (total-cost ) 1))
    )


    (:action STACK_A_B
     :parameters ()
     :precondition (and (holding_a ) (clear_b ))
     :effect (and
        (handempty )
        (clear_a )
        (on_a_b )
        (not (clear_b ))
        (not (holding_a ))
        (increase (total-cost ) 1))
    )


    (:action STACK_A_A
     :parameters ()
     :precondition (and (holding_a ) (clear_a ))
     :effect (and
        (handempty )
        (on_a_a )
        (not (holding_a ))
        (increase (total-cost ) 1))
    )


    (:action PUT-DOWN_C
     :parameters ()
     :precondition (holding_c )
     :effect (and
        (clear_c )
        (handempty )
        (ontable_c )
        (not (holding_c ))
        (increase (total-cost ) 1))
    )


    (:action PUT-DOWN_B
     :parameters ()
     :precondition (holding_b )
     :effect (and
        (clear_b )
        (handempty )
        (ontable_b )
        (not (holding_b ))
        (increase (total-cost ) 1))
    )


    (:action PUT-DOWN_A
     :parameters ()
     :precondition (holding_a )
     :effect (and
        (clear_a )
        (handempty )
        (ontable_a )
        (not (holding_a ))
        (increase (total-cost ) 1))
    )


    (:action PICK-UP_A
     :parameters ()
     :precondition (and (handempty ) (ontable_a ) (clear_a ))
     :effect (and
        (holding_a )
        (not (clear_a ))
        (not (ontable_a ))
        (not (handempty ))
        (increase (total-cost ) 1))
    )


    (:action UNSTACK_C_A
     :parameters ()
     :precondition (and (handempty ) (clear_c ) (on_c_a ))
     :effect (and
        (holding_c )
        (clear_a )
        (not (on_c_a ))
        (not (clear_c ))
        (not (handempty ))
        (increase (total-cost ) 1))
    )


    (:action UNSTACK_B_C
     :parameters ()
     :precondition (and (handempty ) (clear_b ) (on_b_c ))
     :effect (and
        (holding_b )
        (clear_c )
        (not (on_b_c ))
        (not (clear_b ))
        (not (handempty ))
        (increase (total-cost ) 1))
    )

)